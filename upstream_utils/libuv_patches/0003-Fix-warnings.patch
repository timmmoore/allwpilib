From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PJ Reiniger <pj.reiniger@gmail.com>
Date: Tue, 26 Apr 2022 15:09:43 -0400
Subject: [PATCH 03/10] Fix warnings

---
 include/uv/win.h    |  5 +++++
 src/idna.c          |  4 ++--
 src/inet.c          |  4 ++++
 src/threadpool.c    |  4 ++++
 src/unix/core.c     | 12 ++++++++++--
 src/unix/internal.h |  4 ++--
 src/unix/thread.c   |  6 ------
 src/uv-common.c     |  8 ++++++++
 src/win/fs-event.c  |  2 ++
 src/win/fs.c        |  2 ++
 src/win/pipe.c      |  2 ++
 src/win/process.c   |  2 ++
 src/win/thread.c    |  4 ++--
 src/win/tty.c       |  2 ++
 14 files changed, 47 insertions(+), 14 deletions(-)

diff --git a/include/uv/win.h b/include/uv/win.h
index 518b17606c3b0c114845594e6be9c3c4d95f1776..9a8c990c1b182633f23890cb5f4532b6bee2b22c 100644
--- a/include/uv/win.h
+++ b/include/uv/win.h
@@ -201,11 +201,16 @@ typedef int (WSAAPI* LPFN_WSARECVFROM)
              LPWSAOVERLAPPED overlapped,
              LPWSAOVERLAPPED_COMPLETION_ROUTINE completion_routine);
 
+#pragma warning(push)
+#pragma warning(disable : 28251)
+
 #ifndef _NTDEF_
   typedef LONG NTSTATUS;
   typedef NTSTATUS *PNTSTATUS;
 #endif
 
+#pragma warning(pop)
+
 #ifndef RTL_CONDITION_VARIABLE_INIT
   typedef PVOID CONDITION_VARIABLE, *PCONDITION_VARIABLE;
 #endif
diff --git a/src/idna.c b/src/idna.c
index 765e12e8f2e030cffa9d498f381c0640aa43a647..17a0e7e74c0204c662594198c1f5b545534ee85e 100644
--- a/src/idna.c
+++ b/src/idna.c
@@ -153,7 +153,7 @@ static int uv__idna_toascii_label(const char* s, const char* se,
                                   char** d, char* de) {
   static const char alphabet[] = "abcdefghijklmnopqrstuvwxyz0123456789";
   const char* ss;
-  unsigned c;
+  unsigned c = 0;
   unsigned h;
   unsigned k;
   unsigned n;
@@ -386,7 +386,7 @@ ssize_t uv_wtf8_length_as_utf16(const char* source_ptr) {
 
 void uv_wtf8_to_utf16(const char* source_ptr,
                       uint16_t* w_target,
-                      size_t w_target_len) {
+                      [[maybe_unused]] size_t w_target_len) {
   int32_t code_point;
 
   do {
diff --git a/src/inet.c b/src/inet.c
index dd94bea3886ca37945fcad7909d765e3700e3c21..71c9e5b774d64d505e6c6d6ed2637178b8532d4d 100644
--- a/src/inet.c
+++ b/src/inet.c
@@ -22,6 +22,10 @@
 #include "uv.h"
 #include "uv-common.h"
 
+#ifdef _WIN32
+#pragma warning(disable : 6001)
+#endif
+
 #define UV__INET_ADDRSTRLEN         16
 #define UV__INET6_ADDRSTRLEN        46
 
diff --git a/src/threadpool.c b/src/threadpool.c
index f572de5aaf1a1b150e58c7b989949441cac279c4..aa282af468935b680140295a175e503ca82d8fa4 100644
--- a/src/threadpool.c
+++ b/src/threadpool.c
@@ -27,6 +27,10 @@
 
 #include <stdlib.h>
 
+#ifdef _WIN32
+#pragma warning(disable: 6001 6011)
+#endif
+
 #define MAX_THREADPOOL_SIZE 1024
 
 static uv_once_t once = UV_ONCE_INIT;
diff --git a/src/unix/core.c b/src/unix/core.c
index 8c08d607884335a2da5cb49f35e3108cb833da32..4bc870214afa1e08da2f7b335c031d67d221fdd6 100644
--- a/src/unix/core.c
+++ b/src/unix/core.c
@@ -576,6 +576,16 @@ int uv__accept(int sockfd) {
   return peerfd;
 }
 
+#if defined(__APPLE__)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wdollar-in-identifier-extension"
+#if defined(__LP64__)
+  extern "C" int close$NOCANCEL(int);
+#else
+  extern "C" int close$NOCANCEL$UNIX2003(int);
+#endif
+#pragma GCC diagnostic pop
+#endif
 
 /* close() on macos has the "interesting" quirk that it fails with EINTR
  * without closing the file descriptor when a thread is in the cancel state.
@@ -590,10 +600,8 @@ int uv__close_nocancel(int fd) {
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored "-Wdollar-in-identifier-extension"
 #if defined(__LP64__) || TARGET_OS_IPHONE
-  extern int close$NOCANCEL(int);
   return close$NOCANCEL(fd);
 #else
-  extern int close$NOCANCEL$UNIX2003(int);
   return close$NOCANCEL$UNIX2003(fd);
 #endif
 #pragma GCC diagnostic pop
diff --git a/src/unix/internal.h b/src/unix/internal.h
index bcb3be577e584925d4bf4a20d2429ce13aad0584..4c167f5e529cb38a7418fc35dbbafc2a2cea626c 100644
--- a/src/unix/internal.h
+++ b/src/unix/internal.h
@@ -384,8 +384,8 @@ UV_UNUSED(static void uv__update_time(uv_loop_t* loop)) {
   loop->time = uv__hrtime(UV_CLOCK_FAST) / 1000000;
 }
 
-UV_UNUSED(static char* uv__basename_r(const char* path)) {
-  char* s;
+UV_UNUSED(static const char* uv__basename_r(const char* path)) {
+  const char* s;
 
   s = strrchr(path, '/');
   if (s == NULL)
diff --git a/src/unix/thread.c b/src/unix/thread.c
index 20409541de3cb300504b823472a73bc95fa38f62..688c042e1aedf379264900c29758c8b01a4a90ed 100644
--- a/src/unix/thread.c
+++ b/src/unix/thread.c
@@ -137,12 +137,6 @@ int uv_thread_create_ex(uv_thread_t* tid,
   size_t stack_size;
   size_t min_stack_size;
 
-  /* Used to squelch a -Wcast-function-type warning. */
-  union {
-    void (*in)(void*);
-    void* (*out)(void*);
-  } f;
-
   stack_size =
       params->flags & UV_THREAD_HAS_STACK_SIZE ? params->stack_size : 0;
 
diff --git a/src/uv-common.c b/src/uv-common.c
index 69e95801a18104ea910abf86db236d85f62afb66..49126e50f07bac16d198775454b731f40630d1d1 100644
--- a/src/uv-common.c
+++ b/src/uv-common.c
@@ -802,6 +802,10 @@ void uv__fs_readdir_cleanup(uv_fs_t* req) {
   }
 }
 
+#ifdef __clang__
+# pragma clang diagnostic push
+# pragma clang diagnostic ignored "-Wvarargs"
+#endif
 
 int uv_loop_configure(uv_loop_t* loop, uv_loop_option option, ...) {
   va_list ap;
@@ -815,6 +819,10 @@ int uv_loop_configure(uv_loop_t* loop, uv_loop_option option, ...) {
   return err;
 }
 
+#ifdef __clang__
+# pragma clang diagnostic pop
+#endif
+
 
 static uv_loop_t default_loop_struct;
 static uv_loop_t* default_loop_ptr;
diff --git a/src/win/fs-event.c b/src/win/fs-event.c
index dba981c68821ece88e0beb80422b214b77e84b79..2f566f796a55c68329d5aed19bd5bb392d0082fa 100644
--- a/src/win/fs-event.c
+++ b/src/win/fs-event.c
@@ -19,6 +19,8 @@
  * IN THE SOFTWARE.
  */
 
+#define _CRT_NONSTDC_NO_WARNINGS
+
 #include <assert.h>
 #include <errno.h>
 #include <stdio.h>
diff --git a/src/win/fs.c b/src/win/fs.c
index 7e2367e8c1c6ad96af55a2cc370142104cc0de77..b812293048e60264f3e849367b7a129c306f8502 100644
--- a/src/win/fs.c
+++ b/src/win/fs.c
@@ -19,6 +19,8 @@
  * IN THE SOFTWARE.
  */
 
+#define _CRT_NONSTDC_NO_WARNINGS
+
 #include <assert.h>
 #include <stdlib.h>
 #include <direct.h>
diff --git a/src/win/pipe.c b/src/win/pipe.c
index 27868221455dcbb90c00066fd8b716d2c0a4d371..d747dc72362a0b21077fa7b9beb57234ca62baad 100644
--- a/src/win/pipe.c
+++ b/src/win/pipe.c
@@ -19,6 +19,8 @@
  * IN THE SOFTWARE.
  */
 
+#define _CRT_NONSTDC_NO_WARNINGS
+
 #include <assert.h>
 #include <io.h>
 #include <stdio.h>
diff --git a/src/win/process.c b/src/win/process.c
index 25f1075745267785cdd7d7de83d9c62750305852..e4bf93d707da3d22b747300775e8c96a34039ddb 100644
--- a/src/win/process.c
+++ b/src/win/process.c
@@ -19,6 +19,8 @@
  * IN THE SOFTWARE.
  */
 
+#define _CRT_NONSTDC_NO_WARNINGS
+
 #include <assert.h>
 #include <io.h>
 #include <stdio.h>
diff --git a/src/win/thread.c b/src/win/thread.c
index 57f1698f595e2410a51044f7f228b5a235206819..03b33e9b4de6fe2532095d717a8639e8df454cce 100644
--- a/src/win/thread.c
+++ b/src/win/thread.c
@@ -204,8 +204,8 @@ int uv_thread_setaffinity(uv_thread_t* tid,
   threadmask = 0;
   for (i = 0; i < cpumasksize; i++) {
     if (cpumask[i]) {
-      if (procmask & (1 << i))
-        threadmask |= 1 << i;
+      if (procmask & (1LL << i))
+        threadmask |= 1LL << i;
       else
         return UV_EINVAL;
     }
diff --git a/src/win/tty.c b/src/win/tty.c
index 0b51b6c82fad711480c28ad6cee7125ddb72ca87..67df01396ab50260b986fc9e7aff0368f6ceb308 100644
--- a/src/win/tty.c
+++ b/src/win/tty.c
@@ -19,6 +19,8 @@
  * IN THE SOFTWARE.
  */
 
+#define _CRT_NONSTDC_NO_WARNINGS
+
 #include <assert.h>
 #include <io.h>
 #include <string.h>
